{"version":3,"sources":["APISearchLocation.js","APISearchArtist.js","APISearchKeyword.js","AddAPItoDB.js","Placeholder.js","GetMemberShows.js","GetMemberArtists.js","GetMemberFriends.js","AddFriend.js","OneUserProfile.js","OneAPIEvent.js","EventfulCall.js","TheWholeAPIEnchilada.js","AddDBEventtoUser.js","EventListItem.js","EventList.js","Search.js","DeleteEvent.js","OneUserEvent.js","UpcomingShows.js","FavoriteArtists.js","MyFriends.js","Profile.js","NavBar.js","Login.js","Register.js","Logout.js","AddArtistToUser.js","SearchbyArtist.js","Delete.js","SubmitUpdate.js","Update.js","MusicPal.js","App.js","serviceWorker.js","index.js"],"names":["APISearchLocation","props","react_default","a","createElement","value","searchLocation","onChange","event","handleInput","target","APISearchArtist","searchArtist","APISearchKeyword","searchKeyword","AddAPItoDB","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","eventArray","fetch","method","headers","Content-type","body","JSON","stringify","eventID","artist","venue","city","date","then","result","console","log","React","Component","Placeholder","className","src","alt","GetMemberShows","myShows","_this2","userID","r","json","showArray","setState","showList","map","show","key","id","GetMemberArtists","myArtists","artistArray","artistList","name","GetMemberFriends","myFriends","friendArray","friendsList","friend","username","home","AddFriend","friend_id","OneUserProfile","email","likes","dislikes","pal","showPal","user","_this3","src_GetMemberShows","src_GetMemberArtists","src_GetMemberFriends","href","concat","onClick","addFriend","src_AddFriend","OneAPIEvent","_addEvent","e","addToList","_showPal","friends","userArray","attendeeList","length","src_AddAPItoDB","src_Placeholder","src_OneUserProfile","EventfulCall","_showEvent","clickedEvent","find","oneEvent","content","width","height","frameBorder","title","allowFullScreen","eventList","src_OneAPIEvent","TheWholeAPIEnchilada","_setSearchLocation","term","_setSearchArtist","_setSearchKeyword","_showList","showAPIList","data","searchkeyword","src_APISearchLocation","src_APISearchArtist","src_APISearchKeyword","src_EventfulCall","AddDBEventtoUser","EventListItem","src_AddDBEventtoUser","EventList","events","src_EventListItem","Search","_setSearchTerm","searchTerm","_searchEvents","filteredEvents","filter","termMatchesArtist","includes","termMatchesLocation","eventsArray","src_EventList","src_TheWholeAPIEnchilada","DeleteEvent","OneUserEvent","_deleteEvent","deleteFromList","members","role","aria-label","src_DeleteEvent","UpcomingShows","thisOne","catch","err","src_OneUserEvent","FavoriteArtists","MyFriends","Profile","isLoggedIn","_ref","history","push","src_UpcomingShows","Link","to","src_FavoriteArtists","src_MyFriends","NavBar","Login","_checkCredentials","preventDefault","axios","post","status","alert","_updateUsername","_updatePassword","password","onSubmit","type","Register","_updateName","_updateEmail","emailAddress","_updateHome","_updateLikes","_updateDislikes","_updatePal","_checkUsername","Logout","action","AddArtistToUser","SearchbyArtist","artists","grimes","jeff","clickedArtist","src_AddArtistToUser","Delete","_deleteAccount","confirm","SubmitUpdate","Update","_submitUpdate","updateSubmit","placeholder","src_SubmitUpdate","MusicPal","_setArtistSearch","artistSearch","users","BrowserRouter","src_NavBar","Route","path","exact","render","src_Login","src_Register","src_Search","assign","src_SearchbyArtist","src_Profile","src_Logout","src_Delete","src_Update","App","src_MusicPal","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3abdce0.chunk.js","sourcesContent":["import React from 'react';\n\nconst APISearchLocation = (props) => {\n\n    return (\n        <div>\n            <label>location</label>\n            <input\n                value={props.searchLocation}\n                onChange={(event) => {\n                    props.handleInput(event.target.value)\n                }}\n            ></input>\n            {/* <button onClick={() => { props._showList() }}>location</button> */}\n\n\n        </div>\n    )\n\n}\n\nexport default APISearchLocation;","import React from 'react';\n\nconst APISearchArtist = (props) => {\n    return (\n        <div>\n            <label>artist</label>\n            <input\n                value={props.searchArtist}\n                onChange={(event) => {\n                    props.handleInput(event.target.value)\n                }}\n            ></input>\n            {/* <button onClick={() => { this._showList() }}>artist</button> */}\n\n        </div>\n    )\n\n}\n\nexport default APISearchArtist;","import React from 'react';\n\nconst APISearchKeyword = (props) => {\n    return (\n\n        <div>\n            <label>keyword</label>\n            <input\n                value={props.searchKeyword}\n                onChange={(event) => {\n                    props.handleInput(event.target.value)\n                }}\n            ></input>\n            {/* <button onClick={() => { this._showList() }}>keyword</button> */}\n        </div>\n    )\n}\n\nexport default APISearchKeyword;","import React from 'react';\n// import EventList from './EventList';\n// import logo from './logo.svg';\n// const API_KEY = process.env.REACT_APP_EVENTFUL_API_KEY;\n\nclass AddAPItoDB extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventArray: [],\n        }\n    }\n\n    componentDidMount() {\n\n        fetch('/addShowToDb', {\n            method: 'post', //so it knows it's a post on this side\n            headers: { 'Content-type': 'application/json' }, //automatically set these\n            body: JSON.stringify({\n                eventID: this.props.eventID,\n                artist: this.props.artist,\n                venue: this.props.venue,\n                city: this.props.city,\n                state: this.props.state,\n                date: this.props.date\n            }), //whatever i want to send back\n        }).then(result => {\n            console.log(result)\n        })\n\n        // }\n\n\n        // fetch('/isInDb', {\n        //     method: 'post',\n        //     headers: { 'Content-type': 'application/json' },\n        //     body: JSON.stringify({\n        //         eventID: this.props.eventID\n        //     })\n        // }).then(r => {\n        //     return r.json()\n\n        // }).then(data => {\n        //     console.log(data);\n        // if (data.eventID !== this.props.eventID) {\n        //     fetch('/addShowToDb', {\n        //         method: 'post', //so it knows it's a post on this side\n        //         headers: { 'Content-type': 'application/json' }, //automatically set these\n        //         body: JSON.stringify({\n        //             eventID: this.props.eventID,\n        //             artist: this.props.artist,\n        //             venue: this.props.venue,\n        //             city: this.props.city,\n        //             state: this.props.state,\n        //             date: this.props.date\n        //         }), //whatever i want to send back\n        //     })\n        // } else if (data.eventID === this.props.eventID) {\n        //     fetch('/addUserGoingToShow', {\n        //         method: 'post',\n        //         headers: { 'Content-type': 'application/json' },\n        //         body: JSON.stringify({\n        //             eventID: this.props.eventID\n        //         }),\n        //     })\n        // }\n    };\n\n\n    render() {\n        return (\n            <div>\n                <p>Awesome! You are going to have a blast attending this show!</p>\n            </div>\n        )\n    }\n}\n\n\nexport default AddAPItoDB;","import React from 'react';\n\n\n\nconst Placeholder = (props) => {\n    return (\n        <div className =\"OneEventPlacehoder\">\n            \n            \n            <img className=\"eventImage\" src=\"https://assets.rbl.ms/19048490/980x.jpg\" alt=\"gaga rockin the keytar\"></img>\n\n     \n       \n        </div>\n\n    )\n}\n\nexport default Placeholder;","import React from 'react';\n\nclass GetMemberShows extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            myShows: []\n        }\n    }\n\n    componentDidMount() {\n        fetch('/otherShows', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                userID: this.props.userID\n            })\n        }).then(r => r.json())\n            .then(showArray => {\n                this.setState({\n                    myShows: showArray\n                })\n            })\n    }\n\n    render() {\n        console.log(this.props.userID)\n        const showList = this.state.myShows.map(show => {\n\n            return (\n                <li \n                className=\"eventList\"\n                key={show.id}>\n                    {show.artist} at {show.venue} in {show.city}, {show.state} on {show.date}\n                </li>\n            )\n        })\n\n        return (\n            <div><ul>\n                {showList}</ul></div>\n        )\n    }\n}\n\nexport default GetMemberShows;","import React from 'react';\n\nclass GetMemberArtists extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            myArtists: [],\n        }\n    }\n\n    componentDidMount() {\n        console.log('looking for palartists')\n        console.log(this.props.userID)\n        fetch('/palArtists', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                userID: this.props.userID\n            })\n        })\n            .then(r => r.json())\n            .then(artistArray => {\n                this.setState({\n                    myArtists: artistArray\n                })\n            })\n    };\n\n    render() {\n\n        const artistList = this.state.myArtists.map(artist => {\n            return (\n                <li key={artist.id}>{artist.name}</li>\n            )\n        })\n\n        return (\n            <div>\n\n                <ul>\n                    {artistList}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default GetMemberArtists;","import React from 'react';\n\nclass GetMemberFriends extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            myFriends: [],\n        }\n    }\n\n    componentDidMount() {\n        fetch('/palFriends', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                userID: this.props.userID\n            }),\n        })\n            .then(r => r.json())\n            .then(friendArray => {\n                this.setState({\n                    myFriends: friendArray\n                })\n            })\n    };\n\n    render() {\n\n        const friendsList = this.state.myFriends.map(friend => {\n            return (\n                <li key={friend.id}>{friend.username} in {friend.home} </li >\n            )\n        })\n\n        return (\n            <div>\n\n\n                <ul>\n                    {friendsList}\n                </ul>\n            </div >\n        )\n    }\n}\n\nexport default GetMemberFriends;","import React from 'react';\n\nclass AddFriend extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props.friend_id)\n        console.log('^^ sending this friend id to add')\n        fetch('/addToUserFriends', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                friend_id: this.props.friend_id\n            }),\n        })\n    }\n\n    render() {\n        return (\n            <p>Yay! You have a new MusicPal!</p>\n        )\n    }\n\n}\n\nexport default AddFriend;","import React from 'react';\n\nimport GetMemberShows from './GetMemberShows';\nimport GetMemberArtists from './GetMemberArtists';\nimport GetMemberFriends from './GetMemberFriends';\nimport AddFriend from './AddFriend';\n\nclass OneUserProfile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            username: '',\n            email: '',\n            likes: '',\n            dislikes: '',\n            pal: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('/palProfile', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                userID: this.props.showPal\n            }),\n        })\n\n            .then(r => r.json())\n            .then(user => {\n\n                this.setState({\n                    id: user.id,\n                    username: user.username,\n                    email: user.email,\n                    likes: user.likes,\n                    dislikes: user.dislikes,\n                    pal: user.pal\n                })\n            }) \n    };\n\n\n\n    render() {\n        console.log(this.state)\n        console.log('^^ oneuserprofile state')\n        return (\n            <div className=\"friendProfile\" >\n                <h3>all about {this.state.username}</h3>\n                <ul>\n                    {/* <li>{this.state.home}</li> */}\n                    <h4>{this.state.username}'s likes:</h4>\n                    <p>{this.state.likes}</p>\n                    <h4>{this.state.username}'s dislikes:</h4>\n                    <p>{this.state.dislikes}</p>\n                    <h4>{this.state.username} is interested in pals for event attendance? </h4>\n                    <p>{this.state.pal} </p>\n                    <h4>{this.state.username}'s shows:</h4>\n                    <ul><GetMemberShows\n                        userID={this.props.showPal} /></ul>\n                    <h4>{this.state.username}'s artists:</h4>\n                    <ul><GetMemberArtists\n                        userID={this.props.showPal} /></ul>\n                    <h4>{this.state.username}'s friends:</h4>\n                    <ul><GetMemberFriends\n                        userID={this.props.showPal} /></ul >\n                </ul>\n                <a className=\"logout\"\n                    href={`mailto: (${this.state.email})`}>\n                    <label> email me!</label></a>\n                <p className=\"logout\"\n                    onClick={() => {\n                        this.setState({\n                            addFriend: true\n                        })\n                    }}>add as friend</p>\n                {this.state.addFriend ? <AddFriend\n                    friend_id={(this.state.id)}\n                /> : null}\n\n            </div >\n        )\n\n    }\n\n    // _addToFriends = (id) => {\n\n    //     addFriend: true\n    // }\n}\n\nexport default OneUserProfile;","import React from 'react';\n\nimport AddAPItoDB from './AddAPItoDB';\nimport Placeholder from './Placeholder';\nimport OneUserProfile from './OneUserProfile';\n\nclass OneAPIEvent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addToList: false,\n            friends: [],\n            showPal: null\n        }\n    }\n\n    componentDidMount() {\n        console.log('looking to fetch');\n        console.log(this.props.event.id)\n        fetch('/showUsers', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                eventID: this.props.event.id\n            }),\n        })\n            .then(r => {\n                return r.json()\n            })\n\n            .then(userArray => {\n                this.setState({\n                    friends: userArray\n                })\n            })\n    };\n\n    render() {\n\n        console.log(this.props.event);\n        console.log(this.state.friends)\n\n        // const attendeeList = this.state.friends.map(pal => {\n        //     return (\n        //         <li key={pal.id}>{pal.username} from {pal.home}</li>\n        //     )\n        // })\n\n        let attendeeList;\n        if (this.state.friends.length === 0) {\n            attendeeList = (\n                <li>none so far!</li>\n            )\n        } else {\n            attendeeList =\n                this.state.friends.map(pal => {\n                    return (\n                        <li\n                            onClick={() => {\n                                this._showPal(pal.id)\n                            }}\n                            key={pal.id}>{pal.username} from {pal.home}</li>\n                    )\n                })\n        }\n\n        return (\n            <div className=\"oneEvent\" >\n\n                <div>\n                    <ul>\n                        {/* <p>an event goes here</p> */}\n                        <li>Artist: {this.props.event.artist} </li>\n                        <li>Venue: {this.props.event.venue} in {this.props.event.city}, {this.props.event.state}</li>\n                        <li>Date: {this.props.event.date}</li>\n                        <li>Musicpal members going to this concert: <ul>{attendeeList}</ul> </li>\n                    </ul>\n                    {/* <img className=\"eventImage\" src=\"https://assets.rbl.ms/19048490/980x.jpg\"></img> */}\n                </div>\n\n                <button onClick={() => {\n                    this._addEvent()\n                }}>I want to go!</button>\n                {this.state.addToList ? <AddAPItoDB\n                    attendeeList={(this.state.attendeeList)}\n                    eventID={(this.props.event.id)}\n                    artist={(this.props.event.artist)}\n                    venue={(this.props.event.venue)}\n                    city={(this.props.event.city)}\n                    state={(this.props.event.state)}\n                    date={(this.props.event.date)}\n                /> : null}\n                {this.state.addToList ? <Placeholder /> : null}\n                {\n                    this.state.showPal ? <OneUserProfile\n                        showPal={(this.state.showPal)}\n                    /> : null\n                }\n            </div >\n        )\n    }\n\n    _addEvent = (e) => {\n        this.setState({\n            addToList: true\n        }, () => {\n            console.log('clicked yo');\n            console.log(this.state.addToList);\n            console.log(this.props.event.artist);\n        })\n\n    }\n\n    _showPal = (id) => {\n        console.log(`look at one friend with id ${id}`)\n        // let clickedPal = this.state.friends.find(jeff => {\n        //     return id === jeff.id\n        // })\n        // console.log(`clickedpal ${clickedPal}`)\n        this.setState({\n            showPal: id\n        })\n        // console.log(this.state)\n    }\n\n}\n\nexport default OneAPIEvent;","import React from 'react';\n\n// import AddAPItoDB from './AddAPItoDB';\nimport OneAPIEvent from './OneAPIEvent';\n\n// let onLoadingGIF = [\n//     {< iframe src = \"https://giphy.com/embed/2r04CWsFWwixW\" width = \"480\" height = \"360\" frameBorder = \"0\" class= \"giphy-embed\" allowFullScreen ></iframe > <p><a href=\"https://giphy.com/gifs/kermit-the-frog-jim-henson-muppet-movie-2r04CWsFWwixW\">via GIPHY</a></p>},\n// { <iframe src=\"https://giphy.com/embed/fcLWUVsaAkxUc\" width=\"480\" height=\"357\" frameBorder=\"0\" className=\"giphy-embed\" allowFullScreen></iframe> <p><a href=\"https://giphy.com/gifs/fatty-fcLWUVsaAkxUc\">via GIPHY</a></p>},\n// { <iframe src=\"https://giphy.com/embed/w5eFyOHmkS8uc\" width=\"480\" height=\"320\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe> <p><a href=\"https://giphy.com/gifs/dancing-party-w5eFyOHmkS8uc\">via GIPHY</a></p>}\n// ]\n\nclass EventfulCall extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventArray: this.props.eventArray,\n            event: null,\n\n        }\n    }\n\n    render() {\n        console.log(this.state.eventArray);\n        let content;\n\n        // NOT WORKING\n        // console.log(this.state.eventArray.artist);\n        // console.log(\"^^ title bitches\");\n        if (this.state.eventArray.length === 0) {\n            content = (\n                <div>\n                    <h1>Loading...</h1>\n                    <iframe src=\"https://giphy.com/embed/2r04CWsFWwixW\" width=\"480\" height=\"360\" frameBorder=\"0\" className=\"giphy-embed\" title=\"1\" allowFullScreen></iframe><p><a href=\"https://giphy.com/gifs/kermit-the-frog-jim-henson-muppet-movie-2r04CWsFWwixW\">via GIPHY</a></p>\n                </div>\n            )\n\n        }\n        else if (\n            !this.state.eventArray[0].artist) {\n            content = (\n                <div>\n                    <h2>no concerts for you</h2>\n                </div>\n            )\n        }\n\n        else {\n            const eventList = this.state.eventArray.map(event => {\n\n                return (\n                    <ul>\n                    <li className=\"eventList\"\n                     onClick={() => {\n                        this._showEvent(event.id)\n                    }}\n                        key={event.id}>\n                        {event.artist} at {event.venue} in {event.city}, {event.state} on {event.date}\n                    </li>\n                    </ul>\n                )\n            })\n            content = (\n\n                < div   >\n                    <ul className=\"list-overflow\">\n                        {eventList}\n                    </ul>\n                </div >\n\n            )\n        }\n\n        return (\n            <div className=\"APIbundle\">\n                <div className=\"oneAPIEvent\">\n                {this.state.event ? <OneAPIEvent\n                    event={(this.state.event)}\n                /> : null}\n                </div>\n                <div className=\"APIevents\">\n                    {content}\n                </div>\n                \n            </div>\n        );\n    }\n\n    _showEvent = (id) => {\n        console.log(`this id ${id} was clicked`)\n        let clickedEvent = this.state.eventArray.find(oneEvent => {\n\n            return id === oneEvent.id\n        })\n        this.setState({\n            event: clickedEvent\n        })\n\n    }\n}\n\n\nexport default EventfulCall;","import React from 'react';\nimport APISearchLocation from './APISearchLocation';\nimport APISearchArtist from './APISearchArtist';\nimport APISearchKeyword from './APISearchKeyword';\nimport EventfulCall from './EventfulCall';\n\nclass TheWholeAPIEnchilada extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchLocation: '',\n            searchArtist: '',\n            searchkeyword: '',\n            showAPIList: false,\n            eventArray: []\n        }\n    }\n\n    render() {\n        return (\n\n            <div className=\"APIenchilada\">\n                <p>don't see what you're looking for? <br /> search for more events from eventful.com</p>\n\n                <APISearchLocation\n                    searchLocation={(this.state.searchLocation)}\n                    handleInput={(this._setSearchLocation)}\n                />\n                <APISearchArtist\n                    searchArtist={(this.state.searchArtist)}\n                    handleInput={(this._setSearchArtist)}\n                />\n                <APISearchKeyword\n                    searchKeyword={(this.state.searchKeyword)}\n                    handleInput={(this._setSearchKeyword)}\n                />\n                <button onClick={this._showList}>search</button>\n                {this.state.showAPIList ? <EventfulCall\n                   eventArray = {this.state.eventArray}\n                /> : null}\n            </div>\n        )\n    }\n\n    _setSearchLocation = (term) => {\n        this.setState({\n            searchLocation: term\n        })\n    }\n    _setSearchArtist = (term) => {\n        this.setState({\n            searchArtist: term\n        })\n    }\n    _setSearchKeyword = (term) => {\n        this.setState({\n            searchKeyword: term\n        })\n    }\n\n    _showList = () => {\n        // e.preventDefault();\n        this.setState({\n            showAPIList: false\n        })\n        console.log('enchilada launch sequence commenced');\n\n\n        fetch('/APIEventList', {\n            method: 'post', //so it knows it's a post on this side\n            headers: { 'Content-type': 'application/json' }, //automatically set these\n            body: JSON.stringify({\n                searchLocation: this.state.searchLocation,\n                searchArtist: this.state.searchArtist,\n                searchKeyword: this.state.searchKeyword || ''\n            }), //whatever i want to send back\n\n        })\n            .then(r => {\n                return r.json()\n            })\n            .then(data => {\n                console.log(data);\n                this.setState({\n                    eventArray: data,\n                    showAPIList: true\n                })\n            })\n        \n    }\n\n    \n\n}\n\nexport default TheWholeAPIEnchilada;","import React from 'react';\n// import EventList from './EventList';\n// import logo from './logo.svg';\n// const API_KEY = process.env.REACT_APP_EVENTFUL_API_KEY;\n\nclass AddDBEventtoUser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventArray: [],\n        }\n    }\n\n    componentDidMount() {\n\n\n        fetch('/addUserGoingToShow', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                eventID: this.props.eventID\n            }),\n        })\n        // }\n\n\n        // fetch('/isInDb', {\n        //     method: 'post',\n        //     headers: { 'Content-type': 'application/json' },\n        //     body: JSON.stringify({\n        //         eventID: this.props.eventID\n        //     })\n        // }).then(r => {\n        //     return r.json()\n\n        // }).then(data => {\n        //     console.log(data);\n        // if (data.eventID !== this.props.eventID) {\n        //     fetch('/addShowToDb', {\n        //         method: 'post', //so it knows it's a post on this side\n        //         headers: { 'Content-type': 'application/json' }, //automatically set these\n        //         body: JSON.stringify({\n        //             eventID: this.props.eventID,\n        //             artist: this.props.artist,\n        //             venue: this.props.venue,\n        //             city: this.props.city,\n        //             state: this.props.state,\n        //             date: this.props.date\n        //         }), //whatever i want to send back\n        //     })\n        // } else if (data.eventID === this.props.eventID) {\n        //     fetch('/addUserGoingToShow', {\n        //         method: 'post',\n        //         headers: { 'Content-type': 'application/json' },\n        //         body: JSON.stringify({\n        //             eventID: this.props.eventID\n        //         }),\n        //     })\n        // }\n    };\n\n\n    render() {\n        return (\n            <div>\n                <p>Awesome! You are going to have a blast attending this show!</p>\n            </div>\n        )\n    }\n}\n\n\nexport default AddDBEventtoUser;","import React from 'react';\n\nimport AddDBEventtoUser from './AddDBEventtoUser';\nimport Placeholder from './Placeholder';\nimport OneUserProfile from './OneUserProfile';\n\nclass EventListItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addToList: false,\n            friends: [],\n            showPal: null\n        }\n    }\n\n    componentDidMount() {\n        console.log('looking to fetch');\n        console.log(this.props.event.id)\n        fetch('/showUsers', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                eventID: this.props.event.id\n            }),\n        })\n            .then(r => {\n                return r.json()\n            })\n\n            .then(userArray => {\n                this.setState({\n                    friends: userArray\n                })\n            })\n    };\n\n    render() {\n\n        console.log(this.props.event);\n        console.log(this.state.friends)\n\n        // const attendeeList = this.state.friends.map(pal => {\n        //     return (\n        //         <li key={pal.id}>{pal.username} from {pal.home}</li>\n        //     )\n        // })\n\n        let attendeeList;\n        if (this.state.friends.length === 0) {\n            attendeeList = (\n                <li>none so far!</li>\n            )\n        } else {\n            attendeeList =\n                this.state.friends.map(pal => {\n                    return (\n                        <li onClick={() => {\n                            this._showPal(pal.id)\n                        }}\n                            key={pal.id}>\n                            {pal.username} from {pal.home}\n                        </li>\n                    )\n                })\n        }\n\n        return (\n            <div className=\"oneEvent\" >\n\n                <div>\n                    <ul>\n                        {/* <p>an event goes here</p> */}\n                        <li>Artist: {this.props.event.artist} </li>\n                        <li>Venue: {this.props.event.venue} in {this.props.event.city}, {this.props.event.state}</li>\n                        <li>Date: {this.props.event.date}</li>\n                        <li>Musicpal members going to this concert: <ul>{attendeeList}</ul> </li>\n                    </ul>\n                    {/* <img className=\"eventImage\" src=\"https://assets.rbl.ms/19048490/980x.jpg\"></img> */}\n                </div>\n\n                <button onClick={() => {\n                    this._addEvent()\n                }}>I want to go!</button>\n                {this.state.addToList ? <AddDBEventtoUser\n                    attendeeList={(this.state.attendeeList)}\n                    eventID={(this.props.event.id)}\n                    artist={(this.props.event.artist)}\n                    venue={(this.props.event.venue)}\n                    city={(this.props.event.city)}\n                    state={(this.props.event.state)}\n                    date={(this.props.event.date)}\n                /> : null}\n                {this.state.addToList ? <Placeholder /> : null}\n                {\n                    this.state.showPal ? <OneUserProfile\n                        showPal={(this.state.showPal)}\n                    /> : null\n                }\n            </div >\n        )\n    }\n\n    _addEvent = (e) => {\n        this.setState({\n            addToList: true\n        }, () => {\n            console.log('clicked yo');\n            console.log(this.state.addToList);\n            console.log(this.props.event.artist);\n        })\n\n    }\n\n    _showPal = (id) => {\n        console.log(`look at one friend with id ${id}`)\n\n        this.setState({\n            showPal: id\n        })\n        // console.log(this.state)\n    }\n\n}\n\nexport default EventListItem;","import React from 'react';\n\nimport EventListItem from './EventListItem';\n\n\n\nclass EventList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // events: this.props.events,\n            event: null\n        }\n    }\n\n    render() {\n        console.log(this.props.events)\n        return (\n            <div className=\"APIbundle\">\n                <div className=\"oneAPIEvent\">\n                    {this.state.event ? <EventListItem\n                        event={(this.state.event)}\n                    /> : null}\n                </div>\n                <ul >\n                    {this.props.events.map(event => {\n                        return (\n\n                            <li className=\"eventList\"\n                                onClick={() => {\n                                    this._showEvent(event.id)\n                                }}\n                                key={event.id}>\n                                {event.artist} at {event.venue} in {event.city}, {event.state} on {event.date}\n                            </li>\n\n                        )\n                    })}\n\n                </ul>\n\n            </div>\n        )\n    }\n\n    _showEvent = (id) => {\n        console.log(`this id ${id} was clicked`)\n        let clickedEvent = this.props.events.find(oneEvent => {\n\n\n            return id === oneEvent.id\n        })\n        this.setState({\n            event: clickedEvent\n        })\n\n    }\n\n}\n\n\nexport default EventList;\n\n\n","import React, { Component } from 'react';\nimport TheWholeAPIEnchilada from './TheWholeAPIEnchilada'\nimport EventList from './EventList';\n\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchTerm: '',\n            events: [],\n            event: null\n        }\n    }\n\n    componentDidMount() {\n        fetch('/eventList')\n            .then(r => r.json())\n            .then(eventsArray => {\n                this.setState({\n                    events: eventsArray\n                })\n            })\n    }\n\n    render() {\n\n        return (\n            <div className=\"login\">\n                <div className=\"searchDB \">\n                    <h3>Search events by artist, genre, or city:</h3>\n                    <input\n                        value={this.state.searchTerm}\n                        onChange={(event) => {\n                            this._setSearchTerm(event.target.value)\n                        }}\n                    ></input>\n                    <EventList events={this._searchEvents(this.state.searchTerm)} />\n                    <div className=\"APIenchilada\">\n                        <TheWholeAPIEnchilada />\n                    </div>\n\n                </div>\n\n            </div>\n\n        )\n    }\n\n    _setSearchTerm = (term) => {\n        this.setState({\n            searchTerm: term\n        })\n    }\n\n    _searchEvents = (term) => {\n        const filteredEvents = this.state.events.filter(event => {\n\n            const termMatchesArtist = event.artist.includes(term)\n            const termMatchesLocation = event.city.includes(term)\n\n            return termMatchesArtist || termMatchesLocation\n\n        });\n        if (this.state.searchTerm.length === 0) {\n            return [];\n        } else {\n            return filteredEvents\n        }\n    }\n}\n\nexport default Search;","import React from 'react';\n\nclass DeleteEvent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // eventArray: [],\n        }\n    }\n\n    componentDidMount() {\n        fetch('/deleteEventFromUser', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                eventID: this.props.eventID\n            }),\n        })\n    }\n\n    render() {\n        return (\n            <p>Too bad! You have successfully deleted the {this.props.artist} show from your shows.</p>\n        )\n    }\n}\n\nexport default DeleteEvent;","import React from 'react';\n\nimport DeleteEvent from './DeleteEvent';\nimport OneUserProfile from './OneUserProfile';\n\nclass OneUserEvent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            deleteFromList: null,\n            friends: [],\n            members: [],\n            showPal: null\n        }\n    }\n\n    componentDidMount() {\n        console.log('you are here');\n        console.log(this.props.event.id)\n        fetch('/showUsers', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                eventID: this.props.event.id\n            }),\n        })\n            .then(r => r.json())\n            .then(userArray => {\n                this.setState({\n                    friends: userArray\n                })\n            })\n    };\n\n    render() {\n\n        // let attendeeList;\n        // if (this.state.friends.length === 1) {\n        //     attendeeList = (\n        //         <li>just me!</li>\n        //     )\n        // } else {\n        let attendeeList =\n            this.state.friends.map(pal => {\n                return (\n\n                    <div>\n                        < li\n                            onClick={() => {\n                                this._showPal(pal.id)\n                            }\n                            }\n                            key={pal.id} > {pal.username} from {pal.home}</li >\n\n                    </div>\n\n                )\n            })\n        //determine here how long the attendee list, and if it is just this req.session.user, then need to call deletefromeventstable also\n\n        return (\n\n            <div className=\"event-profileContainer\">\n\n                <div className=\"oneEvent profile-event\">\n\n                    <div>\n                        <ul>\n                            <li>Artist: {this.props.event.artist} </li>\n                            <li>Venue: {this.props.event.venue} in {this.props.event.city}, {this.props.event.state}</li>\n                            <li>Date: {this.props.event.date}</li>\n                            <li>Musicpal members going to this concert: <ul>{attendeeList}</ul> </li>\n                            <li>I'm going!</li>\n                            <button onClick={() => {\n                                this._deleteEvent()\n                            }}>I have to cancel. <span role=\"img\" aria-label=\"frowny face emoji\">☹️ </span></button>\n                            {this.state.deleteFromList ? <DeleteEvent\n                                eventID={(this.props.event.id)}\n                                artist={(this.props.event.artist)}\n                            /> : null}\n                        </ul>\n                    </div>\n\n\n                </div>\n                <div >\n                    {this.state.showPal ? <OneUserProfile\n                        showPal={(this.state.showPal)}\n                    /> : null\n                    }\n                </div>\n\n            </div>\n        )\n    }\n\n    _showPal = (id) => {\n        console.log(`look at one friend with id ${id}`)\n\n        this.setState({\n            showPal: id\n        })\n        // console.log(this.state)\n    }\n\n\n    _deleteEvent = (e) => {\n        this.setState({\n            deleteFromList: true\n        }, () => {\n            console.log('the life-changing magic of deleting events')\n        })\n    }\n}\n\nexport default OneUserEvent;","import React from 'react';\n\nimport OneUserEvent from './OneUserEvent';\n\nclass UpcomingShows extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            myShows: [],\n            event: null\n        }\n    }\n\n    componentDidMount() {\n        fetch('/upcomingShows'\n        )\n            .then(r => r.json())\n            .then(showArray => {\n                // console.log(showArray);\n                this.setState({\n                    myShows: showArray\n                })\n            })\n            .catch( err => {\n                console.log(err)\n            }\n              \n            )\n    };\n\n    render() {\n\n        const showList = this.state.myShows.map(show => {\n            // console.log(show);\n            return (\n\n                <li className=\"eventList\" onClick={() => {\n                    this._showEvent(show.id)\n                }}\n                    key={show.id}>\n                    {show.artist} at {show.venue} in {show.city}, {show.state} on {show.date}\n                </li>\n\n            )\n        })\n        // console.log(this.state.myShows);\n        return (\n            <div>\n\n                <ul >\n                    {showList}\n                </ul>\n                {this.state.event ? <OneUserEvent\n                    event={(this.state.event)}\n                /> : null}\n\n            </div>\n        );\n    }\n\n    _showEvent = (id) => {\n        console.log(`this id ${id} was clicked`)\n        let clickedEvent = this.state.myShows.find(thisOne => {\n\n            return id === thisOne.id\n        })\n        this.setState({\n            event: clickedEvent\n        })\n    }\n}\n\nexport default UpcomingShows;","import React from 'react';\n\nclass FavoriteArtists extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            myArtists: [],\n        }\n    }\n\n    componentDidMount() {\n        fetch('/myArtists')\n            .then(r => r.json()\n            )\n            .then(artistArray => {\n                this.setState({\n                    myArtists: artistArray\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    };\n\n    render() {\n\n        const artistList = this.state.myArtists.map(artist => {\n            return (\n                <li className=\"artistList\"\n                 key={artist.id}>{artist.name}</li>\n            )\n        })\n\n        return (\n            <div>\n\n                <ul className=\"artistSection\" >\n                    {artistList}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default FavoriteArtists;","import React from 'react';\n\nimport OneUserProfile from './OneUserProfile';\n\nclass MyFriends extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            myFriends: [],\n            showPal: null\n        }\n    }\n\n    componentDidMount() {\n        fetch('/myFriends')\n            .then(r => r.json())\n            .then(friendArray => {\n                this.setState({\n                    myFriends: friendArray\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    };\n\n    render() {\n\n        const friendsList = this.state.myFriends.map(friend => {\n            return (\n                <li onClick={() => {\n                    this._showPal(friend.id)\n                }}\n                    key={friend.id}>{\n                        friend.username} in {friend.home} </li >\n            )\n        })\n\n        return (\n            <div>\n\n\n                <ul>\n                    {friendsList}\n                </ul>\n                {\n                    this.state.showPal ? <OneUserProfile\n                        showPal={(this.state.showPal)}\n                    /> : null\n                }\n            </div >\n        )\n    }\n\n    _showPal = (id) => {\n        console.log(`look at one friend with id ${id}`)\n        this.setState({\n            showPal: id\n        })\n    }\n\n}\n\nexport default MyFriends;","import React, { Component } from 'react';\nimport UpcomingShows from './UpcomingShows';\nimport FavoriteArtists from './FavoriteArtists';\nimport MyFriends from './MyFriends';\n\n\n\nimport {\n    Link\n} from 'react-router-dom';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: \"\",\n            username: \"\",\n            name: \"\",\n            email: \"\",\n            home: \"\",\n            likes: \"\",\n            dislikes: \"\",\n            pal: \"\",\n            isLoggedIn: false\n        }\n    }\n\n    componentDidMount() {\n\n        fetch('/API/user/isValid')\n        .then(r => {\n            return r.json()\n        })\n        \n            .then (({user, isLoggedIn}) => {\n                console.log(user)\n                if (isLoggedIn === false) {\n                    this.props.history.push('/login')\n                }\n                \n                this.setState({\n                    id: user.id,\n                    username: user.username,\n                    name: user.name,\n                    email: user.email,\n                    home: user.home,\n                    likes: user.likes,\n                    dislikes: user.dislikes,\n                    pal: user.pal,\n                    isLoggedIn: true\n                })\n\n\n            \n       \n         \n      \n        \n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        }\n\n    render() {\n\n        return (\n            <div>\n                <h1>{this.state.name}'s Profile</h1>\n                <p>About Me:</p>\n                <ul >\n                    <li className=\"eventList\">My Username: {this.state.username}</li>\n                    <li className=\"eventList\">My home: {this.state.home}</li>\n                    <li className=\"eventList\">My likes: {this.state.likes}</li>\n                    <li className=\"eventList\">My dislikes: {this.state.dislikes}</li>\n                    <li className=\"eventList\">I am interested in finding pals to go to events with: {this.state.pal}</li>\n                </ul>\n                <p>My Shows:</p>\n                <UpcomingShows\n                    myShows={this.state.myShows} />\n                <Link to=\"/home\">Search More Shows</Link>\n                <p>My Artists:</p>\n                <FavoriteArtists\n                    myArtists={this.state.myArtists} />\n                <Link to=\"/search-artists\">Search More Artists</Link>\n                <p>My Friends:</p>\n                <MyFriends\n                    myFriends={this.state.myFriends} />\n                <Link className=\"logout\" to=\"/update\">Update my Info</Link>\n                <Link className=\"logout\" to=\"/logout\">Logout</Link>\n                <Link className=\"logout\" to=\"/delete\">Delete my Account</Link>\n            </div>\n        )\n    }\n};\nexport default Profile;","import React from 'react';\nimport {\n    Link\n} from 'react-router-dom'\n\nconst NavBar = (props) => {\n    return (\n        <div className=\"navBar \">\n            <ul >\n                {/* <li  className=\"\"><Link to=\"/register\">Register</Link></li> */}\n                <li  className=\"\"><Link to=\"/login\">Login</Link></li>\n                <li className=\"\"><Link to=\"/home\">Search</Link></li>\n                <li className=\"\" ><Link to=\"/profile\">My Profile</Link></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport {\n    Link\n} from 'react-router-dom';\nimport axios from 'axios';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        }\n    }\n    render() {\n        return (\n            <div className=\"login\">\n                <h2>Login</h2>\n                <form onSubmit={(e) => this._checkCredentials(e)}>\n                    <label>\n                        <span >Username:</span>\n                        <input\n                            value={this.state.username}\n                            onChange={this._updateUsername}\n                            type=\"text\" name=\"username\"></input>\n                    </label>\n\n                    <label>\n                        <span>Password:</span>\n                        <input\n                            value={this.state.password}\n                            onChange={this._updatePassword}\n                            type=\"password\" name=\"password\"></input>\n                    </label>\n\n                    <input type=\"submit\" value=\"Login\"></input>\n                </form>\n                <Link to=\"register\">Not a member yet?</Link>\n            </div>\n        )\n    }\n\n    _checkCredentials = (e) => {\n        e.preventDefault();\n        axios\n            .post('/API/login', this.state)\n            .then(r => {\n                if (r.data.status === 'incorrect') {\n                    alert(\"Wrong username or password\")\n                }\n                else {\n                    this.props.history.push('/profile')\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        console.log('attemping to log in ...')\n\n    }\n    _updateUsername = event => {\n        this.setState({\n            username: event.target.value\n        })\n    }\n\n    _updatePassword = event => {\n        this.setState({\n            password: event.target.value\n        })\n    }\n}\nexport default Login;","import React, { Component } from 'react';\n// import { get } from 'https';\nimport axios from 'axios';\nimport {\n    Link\n} from 'react-router-dom';\n\n// make a handleSubmit\n// change backend route\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            username: '',\n            password: '',\n            emailAddress: '',\n            home: '',\n            likes: '',\n            dislikes: '',\n            pal: ''\n        }\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"login\">\n                <h3>Register an account here:</h3>\n                <form onSubmit={(e) => this._checkUsername(e)} >\n\n                    <div className=\"registerBlock\">\n                    <label><span> Your name:</span>\n                        <input\n                            value={this.state.name}\n                            onChange={this._updateName}\n                            type=\"text\" name=\"name\"></input>\n                    </label>\n\n                    <label> <span >Username:</span>\n                        <input\n                            value={this.state.username}\n                            onChange={this._updateUsername}\n                            type=\"text\" name=\"username\"></input>\n                    </label>\n\n                    <label><span > Password:</span>\n                        <input\n                            value={this.state.password}\n                            onChange={this._updatePassword}\n                            type=\"password\" name=\"password\"></input>\n                    </label>\n\n                    <label> <span>Email:</span>\n                        <input\n                            value={this.state.emailAddress}\n                            onChange={this._updateEmail}\n                            type=\"email\" name=\"email\"></input>\n                    </label>\n\n                    <label> <span>Home:</span>\n                        <input\n                            onChange={this._updateHome}\n                            value={this.state.home}\n                            type=\"text\" name=\"home\"></input>\n                    </label>\n\n                    <label> <span>Likes:</span>\n                        <input\n                            onChange={this._updateLikes}\n                            value={this.state.likes}\n                            type=\"text\" name=\"likes\"></input>\n                    </label>\n\n                    <label> <span>Dislikes:</span>\n                        <input\n                            onChange={this._updateDislikes}\n                            value={this.state.dislikes}\n                            type=\"text\" name=\"dislikes\"></input>\n                    </label>\n\n                    <label> <span>Are you interested in connecting with another user to attend events with?</span>\n                        <input\n                            onChange={this._updatePal}\n                            value={this.state.pal}\n                            type=\"text\" name=\"pal\"></input>\n                    </label>\n\n                    <label>\n                        <input\n\n                            type=\"submit\" value=\"Sign Up!\"></input>\n                    </label>\n                    </div>\n                </form>\n                <Link to=\"/login\">Already a member?</Link>\n            </div>\n        )\n    }\n\n\n    _updateName = event => {\n        this.setState({\n            name: event.target.value\n        })\n    }\n\n    _updateUsername = event => {\n        this.setState({\n            username: event.target.value\n        })\n    }\n\n    _updatePassword = event => {\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    _updateEmail = event => {\n        this.setState({\n            emailAddress: event.target.value\n        })\n    }\n\n    _updateHome = event => {\n        this.setState({\n            home: event.target.value\n        })\n    }\n\n    _updateLikes = event => {\n        this.setState({\n            likes: event.target.value\n        })\n    }\n\n    _updateDislikes = event => {\n        this.setState({\n            dislikes: event.target.value\n        })\n    }\n\n    _updatePal = event => {\n        this.setState({\n            pal: event.target.value\n        })\n    }\n\n    _checkUsername = (e) => {\n        e.preventDefault();\n        axios\n            .post('/API/register', this.state)\n            .then(r => {\n                // return r.text()\n\n                console.log(r.data)\n                if (r.data.status === 'taken') {\n                    alert(\"Try again music-luver (that username is already taken)\")\n                }\n                else {\n                    this.props.history.push('/profile')\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        console.log('i have been submitted')\n    }\n\n\n\n}\n\nexport default Register;","import React from 'react'\n\nconst Logout = (props) => {\n    return(\n        <div>\n            <h3>Thanks for using MusicPal</h3>\n            <form action=\"/logout\" method=\"POST\">\n                <input type=\"submit\" value=\"logout\"></input>\n        \n            </form>\n        </div>\n\n    )\n}\n\nexport default Logout;","import React from 'react';\n\nclass AddArtistToUser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    componentDidMount() {\n\n        fetch('/addArtistToUser', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                id: this.props.artist.id,\n                artist: this.props.artist\n            }),\n        })\n    }\n\n    render() {\n        return (\n            <p>Man, you have awesome taste in music!</p>\n        )\n    }\n}\n\nexport default AddArtistToUser;","import React, { Component } from 'react';\n\nimport AddArtistToUser from './AddArtistToUser';\n\nclass SearchbyArtist extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            artistArray: [],\n            showAPIList: false,\n            addToList: null\n        }\n    }\n\n\n    render() {\n\n        return (\n\n            <div className=\"login\">\n                <h3>Search an Artist</h3>\n                <input\n                    value={this.props.searchTerm}\n                    onChange={(event) => {\n                        this.props.handleInput(event.target.value)\n                    }}\n                ></input>\n                <button\n                    onClick={this._showList}\n                >search</button>\n                <div >\n                    {this.state.artistArray}\n\n                </div>\n\n\n                <div>\n                    {this.state.addToList ? <AddArtistToUser\n                        artist={this.state.addToList}\n                    /> : null}\n                </div>\n\n            </div>\n        )\n    }\n\n    _showList = () => {\n        fetch('/APIartistList', {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                searchArtist: this.props.searchTerm\n            })\n\n\n\n\n\n        })\n\n\n\n            .then(r => r.json())\n            .then(artists => {\n                console.log(artists)\n                const artistList = artists.map(grimes => {\n                    return (\n\n                        <ul className=\"eventList\"\n                            key={grimes.name}>\n                            {grimes.name}\n                            <button onClick={() => {\n                                this._addEvent(grimes.name)\n                            }}\n                            >Add to My Artists!</button>\n\n                        </ul>\n\n\n                    )\n                })\n                if (artistList.length === 0) {\n                    this.setState({\n                        artistArray: 'No results found'\n                    })\n                } else {\n                    this.setState({\n                        artistArray: artistList\n                    })\n                }\n\n            })\n\n        this.setState({\n            showAPIList: true\n        });\n\n\n\n\n    }\n\n    _addEvent = (jeff) => {\n        console.log('is this jeff?')\n        console.log(jeff)\n        let clickedArtist = this.state.artistArray.find(thisOne => {\n            // console.log(thisOne)\n            return jeff === thisOne.key\n        })\n        this.setState({\n            addToList: jeff\n\n        }, () => {\n            console.log(this.state.addToList)\n            console.log(clickedArtist)\n            console.log(jeff)\n        })\n\n\n    }\n\n}\nexport default SearchbyArtist;","import React from 'react';\n\nclass Delete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            confirm: false\n        }\n    }\n\n    render() {\n        if (this.state.confirm === false) {\n            return (\n                <div>\n                    <p>Are you sure you want to delete your account?</p>\n                    <button\n                        onClick={this._deleteAccount}\n                    >Yes, I'm sure</button>\n                </div>\n            )\n        } else if (this.state.confirm === true) {\n            return (\n                <div>\n                    <p>Your account has been deleted.<br />\n                        We're sorry to see you go, but rock on!</p>\n                </div>\n            )\n\n        }\n    }\n\n    _deleteAccount = () => {\n        fetch('/deleteAll')\n            .then(() => {\n                this.setState({ confirm: true })\n                return (\n                    <div>\n                        <p>Your account has been deleted.<br />\n                            We're sorry to see you go, but rock on!</p>\n                    </div>\n                )\n            })\n\n    }\n\n}\n\nexport default Delete;","import React from 'react';\n\nclass SubmitUpdate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    componentDidMount() {\n        fetch('/updateUser', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                name: this.props.name,\n                username: this.props.username,\n                password: this.props.password,\n                email: this.props.emailAddress,\n                home: this.props.home,\n                likes: this.props.likes,\n                dislikes: this.props.dislikes,\n                pal: this.props.pal\n            }),\n        })\n    };\n\n    render() {\n        return (\n            <p>You have successfully updated your information. Now go find some concerts!</p>\n        )\n    }\n}\n\nexport default SubmitUpdate;","import React, { Component } from 'react';\n// import { get } from 'https';\nimport axios from 'axios';\n// import {\n//     Link\n// } from 'react-router-dom';\nimport SubmitUpdate from './SubmitUpdate';\n\n\nclass Update extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            username: '',\n            password: '',\n            emailAddress: '',\n            home: '',\n            likes: '',\n            dislikes: '',\n            pal: '',\n            updateSubmit: false\n        }\n    }\n\n    componentDidMount() {\n        fetch('/API/profile')\n\n            .then(r => {\n                return r.json()\n            })\n            .then(user => {\n\n                this.setState({\n                    id: user.id,\n                    name: user.name,\n\n                    username: user.username,\n                    password: user.password,\n                    emailAddress: user.email,\n                    home: user.home,\n                    likes: user.likes,\n                    dislikes: user.dislikes,\n                    pal: user.pal\n                })\n            })\n    }\n\n    render() {\n\n        return (\n            <div>\n                <h3>Update your information here:</h3>\n                <form>\n                    <label><span> Your name:</span>\n                        <input\n                            placeholder={this.state.name}\n                            value={this.state.name}\n                            onChange={this._updateName}\n                            type=\"text\" name=\"name\"></input>\n                    </label>\n\n                    <label> <span >Username:</span>\n                        <input\n                            placeholder={this.state.username}\n                            value={this.state.username}\n                            onChange={this._updateUsername}\n                            type=\"text\" name=\"username\"></input>\n                    </label>\n\n                    <label><span > Password:</span>\n                        <input\n                            placeholder={this.state.password}\n                            value={this.state.password}\n                            onChange={this._updatePassword}\n                            type=\"password\" name=\"password\"></input>\n                    </label>\n\n                    <label> <span>Email:</span>\n                        <input\n                            placeholder={this.state.emailAddress}\n                            value={this.state.emailAddress}\n                            onChange={this._updateEmail}\n                            type=\"email\" name=\"email\"></input>\n                    </label>\n\n                    <label> <span>Home:</span>\n                        <input\n                            placeholder={this.state.home}\n                            value={this.state.home}\n                            onChange={this._updateHome}\n                            type=\"text\" name=\"home\"></input>\n                    </label>\n\n                    <label> <span>Likes:</span>\n                        <input\n                            placeholder={this.state.likes}\n                            value={this.state.likes}\n                            onChange={this._updateLikes}\n                            type=\"text\" name=\"likes\"></input>\n                    </label>\n\n                    <label> <span>Dislikes:</span>\n                        <input\n                            placeholder={this.state.dislikes}\n                            value={this.state.dislikes}\n                            onChange={this._updateDislikes}\n                            type=\"text\" name=\"dislikes\"></input>\n                    </label>\n\n                    <label> <span>Are you interested in connecting with another user to attend events with?</span>\n                        <input\n                            placeholder={this.state.pal}\n                            value={this.state.pal}\n                            onChange={this._updatePal}\n                            type=\"text\" name=\"pal\"></input>\n                    </label>\n\n                    <label>\n                        <input\n                            onClick={() => {\n                                this._submitUpdate()\n                            }}\n                            type=\"submit\" value=\"Update\"></input>\n                        {this.state.updateSubmit ? <SubmitUpdate\n                            name={(this.state.name)}\n                            username={(this.state.username)}\n                            password={(this.state.password)}\n                            email={(this.state.emailAddress)}\n                            home={(this.state.home)}\n                            likes={(this.state.likes)}\n                            dislikes={(this.state.dislikes)}\n                            pal={(this.state.pal)}\n                        /> : null\n                        }\n                    </label>\n\n                </form>\n\n            </div >\n        )\n    }\n\n\n    _updateName = event => {\n        this.setState({\n            name: event.target.value\n        })\n    }\n\n    _updateUsername = event => {\n        this.setState({\n            username: event.target.value\n        })\n    }\n\n    _updatePassword = event => {\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    _updateEmail = event => {\n        this.setState({\n            emailAddress: event.target.value\n        })\n    }\n\n    _updateHome = event => {\n        this.setState({\n            home: event.target.value\n        })\n    }\n\n    _updateLikes = event => {\n        this.setState({\n            likes: event.target.value\n        })\n    }\n\n    _updateDislikes = event => {\n        this.setState({\n            dislikes: event.target.value\n        })\n    }\n\n    _updatePal = event => {\n        this.setState({\n            pal: event.target.value\n        })\n    }\n\n    _checkUsername = (e) => {\n        e.preventDefault();\n        axios\n            .post('/API/register', this.state)\n            .then(r => {\n                // return r.text()\n\n                console.log(r.data)\n                if (r.data.status === 'taken') {\n                    alert(\"Try again music-luver (that username is already taken)\")\n                }\n                else {\n                    this.props.history.push('/profile')\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        console.log('i have been submitted')\n    }\n\n    _submitUpdate = () => {\n        this.setState({ updateSubmit: true })\n    }\n\n\n\n}\n\nexport default Update;","import React, { Component } from 'react';\nimport Search from './Search';\nimport Profile from './Profile';\n\nimport NavBar from './NavBar';\nimport Login from './Login';\nimport Register from './Register';\nimport Logout from './Logout';\nimport SearchbyArtist from './SearchbyArtist';\n// import Placeholder from './Placeholder';\n// import OneEvent from './OneEvent';\nimport Delete from './Delete';\nimport Update from './Update';\n\nimport {\n    BrowserRouter as Router,\n    Route,\n} from 'react-router-dom'\n\n\nclass MusicPal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            artistSearch: '',\n            users: [],\n        }\n    }\n\n\n    render() {\n\n        return (\n\n            <Router>\n                <div>\n                    <div className=\"musicpal-home\">\n                        <div className=\"top-of-page\">\n                            <div className=\"navBar-container\">\n                                <NavBar />\n                            </div>\n                            <div className=\"title\">\n                                <h1>MusicPal</h1>\n\n                            </div>\n                        </div>\n                        <div className=\"eventInfo\">\n                            <div className=\"searchBar\">\n                                <Route path=\"/\" exact render={() => {\n                                    return <h2>Find your music... find your pals</h2>\n                                }} />\n                                <Route path=\"/login\" render={(props) => {\n                                    return <Login {...props} />\n                                }}\n                                />\n\n                                <Route path=\"/register\" render={(props) => {\n                                    return <Register  {...props} />\n                                }}\n                                />\n\n                                <Route path=\"/home\" render={(props) => {\n                                    return <Search\n                                        searchTerm={(this.state.searchTerm)} {...props}\n                                        handleInput={(this._setSearchTerm)} {...props} />\n                                }}\n                                />\n\n                                <Route path=\"/search-artists\" render={(props) => {\n                                    return <SearchbyArtist\n                                        searchTerm={(this.state.artistSearch)}{...props}\n                                        handleInput={(this._setArtistSearch)}{...props} />\n                                }}\n                                />\n\n\n                                <div className=\"userProfile\">\n\n\n                                    <Route path=\"/profile\" render={(props) => {\n                                        return <Profile {...props} />\n                                    }}\n                                    />\n\n                                </div>\n\n                            </div>\n                            {/* <Placeholder /> */}\n\n                        \n                        </div>\n\n\n                        <Route path=\"/logout\" render={(props) => {\n                            return <Logout {...props} />\n                        }} />\n                        <Route path=\"/delete\" render={(props) => {\n                            return <Delete {...props} />\n                        }} />\n                        <Route path=\"/update\" render={(props) => {\n                            return <Update {...props} />\n                        }} />\n\n\n                    <footer>Amelia Schulz / Clare Barton</footer>\n                    </div>\n                </div>\n            </Router>\n        )\n    }\n\n\n\n    _setArtistSearch = (term) => {\n        this.setState({\n            artistSearch: term\n        })\n    }\n}\n\nexport default MusicPal;","import React, { Component } from 'react';\nimport './App.css';\n\n\n\nimport MusicPal from './MusicPal';\n\n\n\n\n\n\nclass App extends Component {\n\n  // constructor(props) {\n  //   super(props);\n\n\n  // }\n  render() {\n    return (\n      \n      <div className=\"App\">\n        \n        <MusicPal />\n        \n\n      </div>\n     \n    );\n  }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}